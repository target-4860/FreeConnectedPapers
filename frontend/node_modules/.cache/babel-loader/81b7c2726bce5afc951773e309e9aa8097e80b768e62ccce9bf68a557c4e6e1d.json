{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"qa-panel\"\n};\nconst _hoisted_2 = {\n  class: \"qa-header\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"current-item\"\n};\nconst _hoisted_4 = {\n  class: \"qa-history\",\n  ref: \"chatHistory\"\n};\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"qa-citations\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"qa-empty-state\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"qa-typing\"\n};\nconst _hoisted_9 = {\n  class: \"qa-input-container\"\n};\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"医学知识问答\", -1 /* HOISTED */)), $props.selectedItem ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createTextVNode(\" 当前关联资料: \")), _createElementVNode(\"span\", null, _toDisplayString($props.selectedItem.title), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [$data.conversations.length ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.conversations, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['qa-message', item.role])\n    }, [_createElementVNode(\"div\", {\n      class: \"qa-content\",\n      innerHTML: item.role === 'assistant' ? $options.highlightText(item.content) : item.content\n    }, null, 8 /* PROPS */, _hoisted_5), item.role === 'assistant' && item.citations ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" 引用: \" + _toDisplayString(item.citations), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[5] || (_cache[5] = [_createElementVNode(\"p\", null, \"您可以提问关于当前医学资料的任何问题，例如:\", -1 /* HOISTED */), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"高血压的诊断标准是什么？\"), _createElementVNode(\"li\", null, \"高血压的常见治疗方法有哪些？\"), _createElementVNode(\"li\", null, \"高血压与其他疾病有什么关联？\")], -1 /* HOISTED */)]))), $data.isTyping ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n    class: \"typing-indicator\"\n  }, [_createElementVNode(\"span\"), _createElementVNode(\"span\"), _createElementVNode(\"span\")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"textarea\", {\n    ref: \"inputField\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    onKeydown: _cache[1] || (_cache[1] = _withKeys(_withModifiers((...args) => $options.handleSend && $options.handleSend(...args), [\"prevent\"]), [\"enter\"])),\n    placeholder: \"请输入医学相关问题...\",\n    disabled: $data.isTyping,\n    rows: \"3\",\n    class: \"qa-input\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_10), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.handleSend && $options.handleSend(...args)),\n    class: \"qa-send-button\",\n    disabled: $data.isTyping || !$data.userInput.trim()\n  }, \" 发送 \", 8 /* PROPS */, _hoisted_11)])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$props","selectedItem","_hoisted_3","_toDisplayString","title","_hoisted_4","$data","conversations","length","_Fragment","key","_renderList","item","index","_normalizeClass","role","innerHTML","$options","highlightText","content","citations","_hoisted_6","_hoisted_7","_cache","isTyping","_hoisted_8","_hoisted_9","userInput","$event","onKeydown","_withKeys","_withModifiers","args","handleSend","placeholder","disabled","rows","onClick","trim","_hoisted_11"],"sources":["D:\\FreeConnectedPapers\\frontend\\src\\components\\QAPanel.vue"],"sourcesContent":["<template>\r\n  <div class=\"qa-panel\">\r\n    <div class=\"qa-header\">\r\n      <h2>医学知识问答</h2>\r\n      <div v-if=\"selectedItem\" class=\"current-item\">\r\n        当前关联资料: <span>{{ selectedItem.title }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"qa-history\" ref=\"chatHistory\">\r\n      <template v-if=\"conversations.length\">\r\n        <div \r\n          v-for=\"(item, index) in conversations\" \r\n          :key=\"index\" \r\n          :class=\"['qa-message', item.role]\"\r\n        >\r\n          <div class=\"qa-content\" v-html=\"item.role === 'assistant' ? highlightText(item.content) : item.content\"></div>\r\n          <div v-if=\"item.role === 'assistant' && item.citations\" class=\"qa-citations\">\r\n            引用: {{ item.citations }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <div v-else class=\"qa-empty-state\">\r\n        <p>您可以提问关于当前医学资料的任何问题，例如:</p>\r\n        <ul>\r\n          <li>高血压的诊断标准是什么？</li>\r\n          <li>高血压的常见治疗方法有哪些？</li>\r\n          <li>高血压与其他疾病有什么关联？</li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div v-if=\"isTyping\" class=\"qa-typing\">\r\n        <div class=\"typing-indicator\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"qa-input-container\">\r\n      <textarea \r\n        ref=\"inputField\"\r\n        v-model=\"userInput\" \r\n        @keydown.enter.prevent=\"handleSend\"\r\n        placeholder=\"请输入医学相关问题...\"\r\n        :disabled=\"isTyping\"\r\n        rows=\"3\"\r\n        class=\"qa-input\"\r\n      ></textarea>\r\n      <button \r\n        @click=\"handleSend\" \r\n        class=\"qa-send-button\"\r\n        :disabled=\"isTyping || !userInput.trim()\"\r\n      >\r\n        发送\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'QAPanel',\r\n  props: {\r\n    selectedItem: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    searchQuery: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userInput: '',\r\n      conversations: [],\r\n      isTyping: false\r\n    }\r\n  },\r\n  watch: {\r\n    selectedItem(newItem, oldItem) {\r\n      if (newItem && (!oldItem || newItem.id !== oldItem.id)) {\r\n        // 当选择的项目改变时，添加一条系统消息\r\n        this.conversations.push({\r\n          role: 'system',\r\n          content: `已切换至：${newItem.title}`\r\n        });\r\n        this.scrollToBottom();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSend() {\r\n      if (!this.userInput.trim() || this.isTyping) return;\r\n      \r\n      // 添加用户问题到对话记录\r\n      this.conversations.push({\r\n        role: 'user',\r\n        content: this.userInput\r\n      });\r\n      \r\n      const question = this.userInput;\r\n      this.userInput = '';\r\n      this.isTyping = true;\r\n      \r\n      // 滚动到底部\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom();\r\n      });\r\n      \r\n      // 模拟AI回答（实际项目中应替换为真实API调用）\r\n      setTimeout(() => {\r\n        this.simulateResponse(question);\r\n      }, 1000);\r\n    },\r\n    \r\n    simulateResponse(question) {\r\n      let response = '';\r\n      let citations = '';\r\n      \r\n      if (!this.selectedItem) {\r\n        response = \"请先选择一项医学资料，以便我能更准确地回答您的问题。\";\r\n      } else {\r\n        // 根据问题内容和选中的项目生成模拟回答\r\n        const item = this.selectedItem;\r\n        const sourceType = item.sourceType;\r\n        \r\n        if (question.includes('诊断') || question.includes('标准')) {\r\n          if (sourceType === 'guideline') {\r\n            response = `根据《${item.title}》，高血压的诊断标准为：非同日3次测量，收缩压≥140mmHg和/或舒张压≥90mmHg。对于老年人、糖尿病患者和慢性肾病患者，诊断标准可能有所调整。`;\r\n            citations = \"引用自指南诊断章节\";\r\n          } else if (sourceType === 'textbook') {\r\n            response = `《${item.title}》中指出，高血压的诊断需要基于多次血压测量的结果，通常定义为收缩压≥140mmHg和/或舒张压≥90mmHg。需要注意的是，诊断高血压前应排除\"白大衣高血压\"的可能。`;\r\n            citations = \"引用自教材第5章\";\r\n          } else {\r\n            response = `关于高血压的诊断标准，一般参考最新的高血压指南。目前普遍接受的标准是：非同日3次测量，收缩压≥140mmHg和/或舒张压≥90mmHg。`;\r\n          }\r\n        } else if (question.includes('治疗') || question.includes('用药')) {\r\n          if (sourceType === 'guideline') {\r\n            response = `《${item.title}》推荐的高血压治疗包括：1) 生活方式干预：减少钠盐摄入、增加体力活动、限制饮酒、戒烟等；2) 药物治疗：常用药物包括利尿剂、β受体阻滞剂、钙拮抗剂、ACEI/ARB等。对于不同患者，应根据年龄、合并症等因素选择合适的药物。`;\r\n            citations = \"引用自指南治疗章节\";\r\n          } else if (sourceType === 'paper') {\r\n            response = `根据《${item.title}》的研究，高血压治疗的最新趋势是强调个体化治疗策略，根据患者的年龄、合并症、靶器官损害情况等因素选择最合适的药物组合。研究表明，早期联合治疗可能优于单药递增治疗策略。`;\r\n            citations = \"引用自论文结果与讨论部分\";\r\n          } else {\r\n            response = `高血压的治疗包括非药物治疗和药物治疗。非药物治疗包括减少钠盐摄入、增加体力活动、限制饮酒、戒烟等；药物治疗常用的五类降压药包括利尿剂、β受体阻滞剂、钙拮抗剂、ACEI和ARB。`;\r\n          }\r\n        } else if (question.includes('并发症') || question.includes('风险')) {\r\n          if (sourceType === 'emr') {\r\n            response = `根据《${item.title}》的数据分析，高血压患者常见的并发症包括冠心病、心力衰竭、脑卒中、肾功能不全等。数据显示，血压控制不良的患者并发症发生率显著高于血压控制良好的患者。`;\r\n            citations = \"引用自电子病历分析结果\";\r\n          } else {\r\n            response = `高血压是心脑血管疾病的主要危险因素，长期血压升高可导致心、脑、肾等靶器官损害。常见并发症包括冠心病、心力衰竭、脑卒中、肾功能不全等。良好控制血压可显著降低并发症风险。`;\r\n          }\r\n        } else {\r\n          response = `关于\"${item.title}\"中的${question}，这是一个很好的问题。作为一份${this.getSourceTypeName(sourceType)}资料，它提供了关于高血压的重要信息。建议您查阅原文以获取更详细的内容，或者尝试提问更具体的问题，如高血压的诊断标准、治疗方法或并发症等。`;\r\n        }\r\n      }\r\n      \r\n      // 添加回答到对话记录\r\n      this.conversations.push({\r\n        role: 'assistant',\r\n        content: response,\r\n        citations: citations\r\n      });\r\n      \r\n      this.isTyping = false;\r\n      \r\n      // 滚动到底部\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom();\r\n      });\r\n    },\r\n    \r\n    scrollToBottom() {\r\n      const container = this.$refs.chatHistory;\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    },\r\n    \r\n    getSourceTypeName(type) {\r\n      const sourceTypes = {\r\n        'textbook': '教材',\r\n        'paper': '论文',\r\n        'emr': '电子病历',\r\n        'guideline': '临床指南'\r\n      };\r\n      return sourceTypes[type] || '未知来源';\r\n    },\r\n    \r\n    highlightText(text) {\r\n      if (!text || !this.searchQuery) return text;\r\n      \r\n      const regex = new RegExp(`(${this.searchQuery})`, 'gi');\r\n      return text.replace(regex, '<span class=\"highlight-text\">$1</span>');\r\n    }\r\n  },\r\n  mounted() {\r\n    // 页面加载时显示欢迎消息\r\n    this.conversations.push({\r\n      role: 'assistant',\r\n      content: '欢迎使用医学知识问答系统！请选择左侧资料或在知识图谱中点击节点，然后提问相关问题。'\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.qa-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: white;\r\n}\r\n\r\n.qa-header {\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #eee;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.qa-header h2 {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #444;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.current-item {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.current-item span {\r\n  font-weight: 500;\r\n  color: #2a7d8b;\r\n}\r\n\r\n.qa-history {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.qa-message {\r\n  max-width: 85%;\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 8px;\r\n  position: relative;\r\n}\r\n\r\n.qa-message.user {\r\n  align-self: flex-end;\r\n  background-color: #e7f3f5;\r\n  color: #333;\r\n}\r\n\r\n.qa-message.assistant {\r\n  align-self: flex-start;\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.qa-message.system {\r\n  align-self: center;\r\n  background-color: #f0f0f0;\r\n  color: #666;\r\n  font-size: 0.8rem;\r\n  padding: 0.5rem 0.8rem;\r\n  border-radius: 12px;\r\n}\r\n\r\n.qa-content {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.qa-citations {\r\n  margin-top: 0.5rem;\r\n  font-size: 0.75rem;\r\n  color: #888;\r\n  font-style: italic;\r\n}\r\n\r\n.qa-empty-state {\r\n  color: #888;\r\n  font-size: 0.9rem;\r\n  text-align: center;\r\n  padding: 1rem;\r\n}\r\n\r\n.qa-empty-state ul {\r\n  text-align: left;\r\n  margin-top: 0.5rem;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.qa-empty-state li {\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.qa-typing {\r\n  align-self: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.typing-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n}\r\n\r\n.typing-indicator span {\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: #aaa;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  animation: bounce 1.5s infinite ease-in-out;\r\n}\r\n\r\n.typing-indicator span:nth-child(2) {\r\n  animation-delay: 0.2s;\r\n}\r\n\r\n.typing-indicator span:nth-child(3) {\r\n  animation-delay: 0.4s;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 60%, 100% { transform: translateY(0); }\r\n  30% { transform: translateY(-5px); }\r\n}\r\n\r\n.qa-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  border-top: 1px solid #eee;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.qa-input {\r\n  flex: 1;\r\n  resize: none;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px 0 0 4px;\r\n  padding: 0.6rem;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.qa-input:focus {\r\n  outline: none;\r\n  border-color: #2a7d8b;\r\n}\r\n\r\n.qa-send-button {\r\n  background-color: #2a7d8b;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0 4px 4px 0;\r\n  padding: 0 1.5rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.qa-send-button:hover {\r\n  background-color: #1a6575;\r\n}\r\n\r\n.qa-send-button:disabled {\r\n  background-color: #aaa;\r\n  cursor: not-allowed;\r\n}\r\n\r\n:deep(.highlight-text) {\r\n  background-color: #ffecb3;\r\n  color: #e65100;\r\n  font-weight: bold;\r\n  padding: 0 2px;\r\n  border-radius: 2px;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAW;;;EAEKA,KAAK,EAAC;;;EAK5BA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;;;EAQkCD,KAAK,EAAC;;;;EAMtDA,KAAK,EAAC;;;;EASGA,KAAK,EAAC;;;EASxBA,KAAK,EAAC;AAAoB;;;;uBAxCjCE,mBAAA,CA0DM,OA1DNC,UA0DM,GAzDJC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAAe,YAAX,QAAM,sBACCE,MAAA,CAAAC,YAAY,I,cAAvBL,mBAAA,CAEM,OAFNM,UAEM,G,2CAFwC,WACpC,IAAAJ,mBAAA,CAAqC,cAAAK,gBAAA,CAA5BH,MAAA,CAAAC,YAAY,CAACG,KAAK,iB,0CAIvCN,mBAAA,CA8BM,OA9BNO,UA8BM,GA7BYC,KAAA,CAAAC,aAAa,CAACC,MAAM,I,kBAClCZ,mBAAA,CASMa,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CARoBL,KAAA,CAAAC,aAAa,GAA7BK,IAAI,EAAEC,KAAK;yBADrBjB,mBAAA,CASM;MAPHc,GAAG,EAAEG,KAAK;MACVnB,KAAK,EAAAoB,eAAA,gBAAiBF,IAAI,CAACG,IAAI;QAEhCjB,mBAAA,CAA8G;MAAzGJ,KAAK,EAAC,YAAY;MAACsB,SAA+E,EAAvEJ,IAAI,CAACG,IAAI,mBAAmBE,QAAA,CAAAC,aAAa,CAACN,IAAI,CAACO,OAAO,IAAIP,IAAI,CAACO;yCACpFP,IAAI,CAACG,IAAI,oBAAoBH,IAAI,CAACQ,SAAS,I,cAAtDxB,mBAAA,CAEM,OAFNyB,UAEM,EAFuE,OACvE,GAAAlB,gBAAA,CAAGS,IAAI,CAACQ,SAAS,oB;kDAK3BxB,mBAAA,CAOM,OAPN0B,UAOM,EAAAC,MAAA,QAAAA,MAAA,OANJzB,mBAAA,CAA6B,WAA1B,wBAAsB,qBACzBA,mBAAA,CAIK,aAHHA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAAuB,YAAnB,gBAAc,E,yBAIXQ,KAAA,CAAAkB,QAAQ,I,cAAnB5B,mBAAA,CAMM,OANN6B,UAMM,EAAAF,MAAA,QAAAA,MAAA,OALJzB,mBAAA,CAIM;IAJDJ,KAAK,EAAC;EAAkB,IAC3BI,mBAAA,CAAa,SACbA,mBAAA,CAAa,SACbA,mBAAA,CAAa,Q,qFAKnBA,mBAAA,CAiBM,OAjBN4B,UAiBM,G,gBAhBJ5B,mBAAA,CAQY;IAPVH,GAAG,EAAC,YAAY;+DACPW,KAAA,CAAAqB,SAAS,GAAAC,MAAA;IACjBC,SAAO,EAAAN,MAAA,QAAAA,MAAA,MAAAO,SAAA,CAAAC,cAAA,KAAAC,IAAA,KAAgBf,QAAA,CAAAgB,UAAA,IAAAhB,QAAA,CAAAgB,UAAA,IAAAD,IAAA,CAAU;IAClCE,WAAW,EAAC,cAAc;IACzBC,QAAQ,EAAE7B,KAAA,CAAAkB,QAAQ;IACnBY,IAAI,EAAC,GAAG;IACR1C,KAAK,EAAC;wEALGY,KAAA,CAAAqB,SAAS,E,GAOpB7B,mBAAA,CAMS;IALNuC,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEf,QAAA,CAAAgB,UAAA,IAAAhB,QAAA,CAAAgB,UAAA,IAAAD,IAAA,CAAU;IAClBtC,KAAK,EAAC,gBAAgB;IACrByC,QAAQ,EAAE7B,KAAA,CAAAkB,QAAQ,KAAKlB,KAAA,CAAAqB,SAAS,CAACW,IAAI;KACvC,MAED,iBAAAC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}