{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"qa-panel\"\n};\nconst _hoisted_2 = {\n  class: \"qa-header\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"current-paper\"\n};\nconst _hoisted_4 = {\n  class: \"qa-history\",\n  ref: \"chatHistory\"\n};\nconst _hoisted_5 = {\n  class: \"qa-content\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"qa-citations\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"qa-empty-state\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"qa-typing\"\n};\nconst _hoisted_9 = {\n  class: \"qa-input-container\"\n};\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"论文知识问答\", -1 /* HOISTED */)), $props.selectedPaper ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createTextVNode(\" 当前关联论文: \")), _createElementVNode(\"span\", null, _toDisplayString($props.selectedPaper.title), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [$data.conversations.length ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.conversations, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['qa-message', item.role])\n    }, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(item.content), 1 /* TEXT */), item.role === 'assistant' && item.citations ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" 引用: \" + _toDisplayString(item.citations), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[5] || (_cache[5] = [_createElementVNode(\"p\", null, \"您可以提问关于当前论文的任何问题，例如:\", -1 /* HOISTED */), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"这篇论文的主要贡献是什么？\"), _createElementVNode(\"li\", null, \"论文中提到的关键技术有哪些？\"), _createElementVNode(\"li\", null, \"与其他相关工作有何区别？\")], -1 /* HOISTED */)]))), $data.isTyping ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n    class: \"typing-indicator\"\n  }, [_createElementVNode(\"span\"), _createElementVNode(\"span\"), _createElementVNode(\"span\")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"textarea\", {\n    ref: \"inputField\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    onKeydown: _cache[1] || (_cache[1] = _withKeys(_withModifiers((...args) => $options.handleSend && $options.handleSend(...args), [\"prevent\"]), [\"enter\"])),\n    placeholder: \"请输入论文相关问题...\",\n    disabled: $data.isTyping,\n    rows: \"3\",\n    class: \"qa-input\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_10), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.handleSend && $options.handleSend(...args)),\n    class: \"qa-send-button\",\n    disabled: $data.isTyping || !$data.userInput.trim()\n  }, \" 发送 \", 8 /* PROPS */, _hoisted_11)])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$props","selectedPaper","_hoisted_3","_toDisplayString","title","_hoisted_4","$data","conversations","length","_Fragment","key","_renderList","item","index","_normalizeClass","role","_hoisted_5","content","citations","_hoisted_6","_hoisted_7","_cache","isTyping","_hoisted_8","_hoisted_9","userInput","$event","onKeydown","_withKeys","_withModifiers","args","$options","handleSend","placeholder","disabled","rows","onClick","trim","_hoisted_11"],"sources":["D:\\FreeConnectedPapers\\frontend\\src\\components\\QAPanel.vue"],"sourcesContent":["<template>\r\n  <div class=\"qa-panel\">\r\n    <div class=\"qa-header\">\r\n      <h2>论文知识问答</h2>\r\n      <div v-if=\"selectedPaper\" class=\"current-paper\">\r\n        当前关联论文: <span>{{ selectedPaper.title }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"qa-history\" ref=\"chatHistory\">\r\n      <template v-if=\"conversations.length\">\r\n        <div \r\n          v-for=\"(item, index) in conversations\" \r\n          :key=\"index\" \r\n          :class=\"['qa-message', item.role]\"\r\n        >\r\n          <div class=\"qa-content\">{{ item.content }}</div>\r\n          <div v-if=\"item.role === 'assistant' && item.citations\" class=\"qa-citations\">\r\n            引用: {{ item.citations }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <div v-else class=\"qa-empty-state\">\r\n        <p>您可以提问关于当前论文的任何问题，例如:</p>\r\n        <ul>\r\n          <li>这篇论文的主要贡献是什么？</li>\r\n          <li>论文中提到的关键技术有哪些？</li>\r\n          <li>与其他相关工作有何区别？</li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div v-if=\"isTyping\" class=\"qa-typing\">\r\n        <div class=\"typing-indicator\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"qa-input-container\">\r\n      <textarea \r\n        ref=\"inputField\"\r\n        v-model=\"userInput\" \r\n        @keydown.enter.prevent=\"handleSend\"\r\n        placeholder=\"请输入论文相关问题...\"\r\n        :disabled=\"isTyping\"\r\n        rows=\"3\"\r\n        class=\"qa-input\"\r\n      ></textarea>\r\n      <button \r\n        @click=\"handleSend\" \r\n        class=\"qa-send-button\"\r\n        :disabled=\"isTyping || !userInput.trim()\"\r\n      >\r\n        发送\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'QAPanel',\r\n  props: {\r\n    selectedPaper: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userInput: '',\r\n      conversations: [],\r\n      isTyping: false\r\n    }\r\n  },\r\n  watch: {\r\n    selectedPaper(newPaper, oldPaper) {\r\n      if (newPaper && (!oldPaper || newPaper.id !== oldPaper.id)) {\r\n        // 当选择的论文改变时，添加一条系统消息\r\n        this.conversations.push({\r\n          role: 'system',\r\n          content: `已切换至：${newPaper.title}`\r\n        });\r\n        this.scrollToBottom();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSend() {\r\n      if (!this.userInput.trim() || this.isTyping) return;\r\n      \r\n      // 添加用户问题到对话记录\r\n      this.conversations.push({\r\n        role: 'user',\r\n        content: this.userInput\r\n      });\r\n      \r\n      const question = this.userInput;\r\n      this.userInput = '';\r\n      this.isTyping = true;\r\n      \r\n      // 滚动到底部\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom();\r\n      });\r\n      \r\n      // 模拟AI回答（实际项目中应替换为真实API调用）\r\n      setTimeout(() => {\r\n        this.simulateResponse(question);\r\n      }, 1000);\r\n    },\r\n    \r\n    simulateResponse(question) {\r\n      let response = '';\r\n      let citations = '';\r\n      \r\n      if (!this.selectedPaper) {\r\n        response = \"请先选择一篇论文，以便我能更准确地回答您的问题。\";\r\n      } else {\r\n        // 根据问题内容和选中的论文生成模拟回答\r\n        if (question.includes('贡献') || question.includes('重要性')) {\r\n          response = `${this.selectedPaper.title} 的主要贡献在于提出了一种新的${this.selectedPaper.title.includes('Diffusion') ? '扩散模型' : '生成方法'}，能够实现高质量的图像生成。与之前的方法相比，该模型能够更好地控制生成过程，并且在图像质量和多样性方面取得了显著进步。`;\r\n          citations = \"引用自论文摘要和第3节方法部分\";\r\n        } else if (question.includes('方法') || question.includes('技术')) {\r\n          response = `该论文采用了${this.selectedPaper.title.includes('CLIP') ? 'CLIP潜在空间编码' : '扩散模型'} 作为核心技术，通过${this.selectedPaper.title.includes('Text') ? '文本条件引导' : '多阶段生成过程'} 来控制图像生成过程。这种方法能够有效利用大规模预训练模型的知识，实现高质量、可控的图像生成。`;\r\n          citations = \"引用自论文第2节相关工作和第4节实验结果\";\r\n        } else if (question.includes('结果') || question.includes('效果')) {\r\n          response = `根据论文第5节的实验结果，该方法在MS-COCO等数据集上的FID得分为${Math.floor(Math.random() * 10 + 5)}，优于此前的最佳方法。人类评估实验也表明，该方法生成的图像在视觉质量和文本对齐性方面均取得了显著提升。`;\r\n          citations = \"引用自论文第5节实验评估部分\";\r\n        } else {\r\n          response = `关于\"${this.selectedPaper.title}\"，您的问题涉及到的内容可能需要更深入地分析论文。该论文由${this.selectedPaper.authors.join(', ')}在${this.selectedPaper.year}年发表，已被引用${this.selectedPaper.citations_count || 0}次，是${this.selectedPaper.title.includes('Diffusion') ? '扩散模型' : '图像生成'}领域的重要研究。建议您查阅原论文以获取更详细信息。`;\r\n        }\r\n      }\r\n      \r\n      // 添加回答到对话记录\r\n      this.conversations.push({\r\n        role: 'assistant',\r\n        content: response,\r\n        citations: citations\r\n      });\r\n      \r\n      this.isTyping = false;\r\n      \r\n      // 滚动到底部\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom();\r\n      });\r\n    },\r\n    \r\n    scrollToBottom() {\r\n      const container = this.$refs.chatHistory;\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 页面加载时显示欢迎消息\r\n    this.conversations.push({\r\n      role: 'assistant',\r\n      content: '欢迎使用论文知识问答系统！请选择左侧论文或在知识图谱中点击节点，然后提问关于论文的问题。'\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.qa-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: white;\r\n}\r\n\r\n.qa-header {\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #eee;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.qa-header h2 {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #444;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.current-paper {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.current-paper span {\r\n  font-weight: 500;\r\n  color: #2a7d8b;\r\n}\r\n\r\n.qa-history {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.qa-message {\r\n  max-width: 85%;\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 8px;\r\n  position: relative;\r\n}\r\n\r\n.qa-message.user {\r\n  align-self: flex-end;\r\n  background-color: #e7f3f5;\r\n  color: #333;\r\n}\r\n\r\n.qa-message.assistant {\r\n  align-self: flex-start;\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.qa-message.system {\r\n  align-self: center;\r\n  background-color: #f0f0f0;\r\n  color: #666;\r\n  font-size: 0.8rem;\r\n  padding: 0.5rem 0.8rem;\r\n  border-radius: 12px;\r\n}\r\n\r\n.qa-content {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.qa-citations {\r\n  margin-top: 0.5rem;\r\n  font-size: 0.75rem;\r\n  color: #888;\r\n  font-style: italic;\r\n}\r\n\r\n.qa-empty-state {\r\n  color: #888;\r\n  font-size: 0.9rem;\r\n  text-align: center;\r\n  padding: 1rem;\r\n}\r\n\r\n.qa-empty-state ul {\r\n  text-align: left;\r\n  margin-top: 0.5rem;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.qa-empty-state li {\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.qa-typing {\r\n  align-self: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.typing-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n}\r\n\r\n.typing-indicator span {\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: #aaa;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  animation: bounce 1.5s infinite ease-in-out;\r\n}\r\n\r\n.typing-indicator span:nth-child(2) {\r\n  animation-delay: 0.2s;\r\n}\r\n\r\n.typing-indicator span:nth-child(3) {\r\n  animation-delay: 0.4s;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 60%, 100% { transform: translateY(0); }\r\n  30% { transform: translateY(-5px); }\r\n}\r\n\r\n.qa-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  border-top: 1px solid #eee;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.qa-input {\r\n  flex: 1;\r\n  resize: none;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px 0 0 4px;\r\n  padding: 0.6rem;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.qa-input:focus {\r\n  outline: none;\r\n  border-color: #2a7d8b;\r\n}\r\n\r\n.qa-send-button {\r\n  background-color: #2a7d8b;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0 4px 4px 0;\r\n  padding: 0 1.5rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.qa-send-button:hover {\r\n  background-color: #1a6575;\r\n}\r\n\r\n.qa-send-button:disabled {\r\n  background-color: #aaa;\r\n  cursor: not-allowed;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAW;;;EAEMA,KAAK,EAAC;;;EAK7BA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAOjBD,KAAK,EAAC;AAAY;;;EACiCA,KAAK,EAAC;;;;EAMtDA,KAAK,EAAC;;;;EASGA,KAAK,EAAC;;;EASxBA,KAAK,EAAC;AAAoB;;;;uBAxCjCE,mBAAA,CA0DM,OA1DNC,UA0DM,GAzDJC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAAe,YAAX,QAAM,sBACCE,MAAA,CAAAC,aAAa,I,cAAxBL,mBAAA,CAEM,OAFNM,UAEM,G,2CAF0C,WACtC,IAAAJ,mBAAA,CAAsC,cAAAK,gBAAA,CAA7BH,MAAA,CAAAC,aAAa,CAACG,KAAK,iB,0CAIxCN,mBAAA,CA8BM,OA9BNO,UA8BM,GA7BYC,KAAA,CAAAC,aAAa,CAACC,MAAM,I,kBAClCZ,mBAAA,CASMa,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CARoBL,KAAA,CAAAC,aAAa,GAA7BK,IAAI,EAAEC,KAAK;yBADrBjB,mBAAA,CASM;MAPHc,GAAG,EAAEG,KAAK;MACVnB,KAAK,EAAAoB,eAAA,gBAAiBF,IAAI,CAACG,IAAI;QAEhCjB,mBAAA,CAAgD,OAAhDkB,UAAgD,EAAAb,gBAAA,CAArBS,IAAI,CAACK,OAAO,kBAC5BL,IAAI,CAACG,IAAI,oBAAoBH,IAAI,CAACM,SAAS,I,cAAtDtB,mBAAA,CAEM,OAFNuB,UAEM,EAFuE,OACvE,GAAAhB,gBAAA,CAAGS,IAAI,CAACM,SAAS,oB;kDAK3BtB,mBAAA,CAOM,OAPNwB,UAOM,EAAAC,MAAA,QAAAA,MAAA,OANJvB,mBAAA,CAA2B,WAAxB,sBAAoB,qBACvBA,mBAAA,CAIK,aAHHA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAAqB,YAAjB,cAAY,E,yBAITQ,KAAA,CAAAgB,QAAQ,I,cAAnB1B,mBAAA,CAMM,OANN2B,UAMM,EAAAF,MAAA,QAAAA,MAAA,OALJvB,mBAAA,CAIM;IAJDJ,KAAK,EAAC;EAAkB,IAC3BI,mBAAA,CAAa,SACbA,mBAAA,CAAa,SACbA,mBAAA,CAAa,Q,qFAKnBA,mBAAA,CAiBM,OAjBN0B,UAiBM,G,gBAhBJ1B,mBAAA,CAQY;IAPVH,GAAG,EAAC,YAAY;+DACPW,KAAA,CAAAmB,SAAS,GAAAC,MAAA;IACjBC,SAAO,EAAAN,MAAA,QAAAA,MAAA,MAAAO,SAAA,CAAAC,cAAA,KAAAC,IAAA,KAAgBC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAClCG,WAAW,EAAC,cAAc;IACzBC,QAAQ,EAAE5B,KAAA,CAAAgB,QAAQ;IACnBa,IAAI,EAAC,GAAG;IACRzC,KAAK,EAAC;wEALGY,KAAA,CAAAmB,SAAS,E,GAOpB3B,mBAAA,CAMS;IALNsC,OAAK,EAAAf,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAClBpC,KAAK,EAAC,gBAAgB;IACrBwC,QAAQ,EAAE5B,KAAA,CAAAgB,QAAQ,KAAKhB,KAAA,CAAAmB,SAAS,CAACY,IAAI;KACvC,MAED,iBAAAC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}