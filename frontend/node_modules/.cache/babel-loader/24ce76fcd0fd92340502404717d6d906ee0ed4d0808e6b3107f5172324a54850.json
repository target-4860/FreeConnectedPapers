{"ast":null,"code":"export default {\n  name: 'DataSourcePanel',\n  props: {\n    searchQuery: {\n      type: String,\n      default: ''\n    },\n    selectedItem: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    return {\n      activeSource: 'all',\n      // all, textbook, paper, emr, guideline\n      dataSources: [{\n        type: 'all',\n        name: '全部',\n        count: 0\n      }, {\n        type: 'textbook',\n        name: '教材',\n        count: 0\n      }, {\n        type: 'paper',\n        name: '论文',\n        count: 0\n      }, {\n        type: 'emr',\n        name: '电子病历',\n        count: 0\n      }, {\n        type: 'guideline',\n        name: '临床指南',\n        count: 0\n      }],\n      items: []\n    };\n  },\n  computed: {\n    filteredItems() {\n      if (this.activeSource === 'all') {\n        return this.items;\n      }\n      return this.items.filter(item => item.sourceType === this.activeSource);\n    }\n  },\n  methods: {\n    setActiveSource(sourceType) {\n      this.activeSource = sourceType;\n    },\n    selectItem(item) {\n      this.$emit('select-item', item);\n    },\n    formatAuthors(authors) {\n      if (!authors || authors.length === 0) return '';\n      if (authors.length === 1) return authors[0];\n      return authors.slice(0, 2).join(', ') + (authors.length > 2 ? ' 等' : '');\n    },\n    getSourceTypeName(type) {\n      const source = this.dataSources.find(s => s.type === type);\n      return source ? source.name : '';\n    },\n    updateSourceCounts() {\n      // 更新各数据源的数量\n      this.dataSources.forEach(source => {\n        if (source.type === 'all') {\n          source.count = this.items.length;\n        } else {\n          source.count = this.items.filter(item => item.sourceType === source.type).length;\n        }\n      });\n    },\n    loadItems(query) {\n      // 这里应该调用API获取搜索结果\n      // 模拟API调用\n      this.isLoading = true;\n      setTimeout(() => {\n        // 示例数据\n        this.items = this.generateSampleData(query);\n        this.updateSourceCounts();\n        this.isLoading = false;\n\n        // 如果有结果，默认选中第一个\n        if (this.items.length > 0) {\n          this.$emit('select-item', this.items[0]);\n        }\n      }, 500);\n    },\n    generateSampleData(query) {\n      // 生成示例数据\n      const sampleData = [{\n        id: 1,\n        title: '内科学（第9版）',\n        sourceType: 'textbook',\n        authors: ['葛均波', '徐永健'],\n        year: 2018,\n        publisher: '人民卫生出版社',\n        keywords: ['高血压', '糖尿病', '心血管疾病'],\n        sections: [{\n          title: '第5章 高血压',\n          content: `高血压是常见的慢性病，是心脑血管疾病的主要危险因素。随着人口老龄化，高血压的患病率逐年升高。高血压是以体循环动脉压增高为主要特征的临床综合征，可伴有心、脑、肾等器官的功能或器质性损害。`\n        }]\n      }, {\n        id: 2,\n        title: 'Hypertension Management in 2023: A Comprehensive Review',\n        sourceType: 'paper',\n        authors: ['Smith J', 'Johnson R', 'Williams T'],\n        year: 2023,\n        journal: 'Journal of Hypertension',\n        keywords: ['高血压', '治疗', '管理'],\n        abstract: '本文综述了高血压管理的最新进展，包括诊断标准、药物治疗和生活方式干预。'\n      }, {\n        id: 3,\n        title: '某三甲医院高血压患者电子病历分析',\n        sourceType: 'emr',\n        year: 2022,\n        hospital: '北京协和医院',\n        patientCount: 500,\n        keywords: ['高血压', '并发症', '治疗效果'],\n        summary: '本研究分析了500例高血压患者的电子病历数据，探讨了不同治疗方案的效果比较。'\n      }, {\n        id: 4,\n        title: '中国高血压防治指南（2023年修订版）',\n        sourceType: 'guideline',\n        authors: ['中国高血压联盟', '中华医学会心血管病学分会'],\n        year: 2023,\n        organization: '中国高血压联盟',\n        keywords: ['高血压', '诊断', '治疗', '随访'],\n        recommendations: ['建议所有成人定期测量血压', '对于一级高血压患者，建议首先进行生活方式干预']\n      }, {\n        id: 5,\n        title: '病理生理学（第3版）',\n        sourceType: 'textbook',\n        authors: ['王建枝', '殷莲华'],\n        year: 2020,\n        publisher: '高等教育出版社',\n        keywords: ['高血压', '病理机制', '肾素-血管紧张素系统'],\n        sections: [{\n          title: '第7章 高血压的病理生理学',\n          content: `高血压的发病机制复杂，包括肾素-血管紧张素-醛固酮系统激活、交感神经系统功能亢进、血管内皮功能障碍等多种因素。`\n        }]\n      }];\n\n      // 根据查询词过滤\n      if (query) {\n        const lowerQuery = query.toLowerCase();\n        return sampleData.filter(item => item.title.toLowerCase().includes(lowerQuery) || item.keywords && item.keywords.some(k => k.toLowerCase().includes(lowerQuery)));\n      }\n      return sampleData;\n    }\n  },\n  watch: {\n    searchQuery: {\n      handler(newQuery) {\n        if (newQuery) {\n          this.loadItems(newQuery);\n        }\n      },\n      immediate: true\n    }\n  }\n};","map":{"version":3,"names":["name","props","searchQuery","type","String","default","selectedItem","Object","data","activeSource","dataSources","count","items","computed","filteredItems","filter","item","sourceType","methods","setActiveSource","selectItem","$emit","formatAuthors","authors","length","slice","join","getSourceTypeName","source","find","s","updateSourceCounts","forEach","loadItems","query","isLoading","setTimeout","generateSampleData","sampleData","id","title","year","publisher","keywords","sections","content","journal","abstract","hospital","patientCount","summary","organization","recommendations","lowerQuery","toLowerCase","includes","some","k","watch","handler","newQuery","immediate"],"sources":["D:\\FreeConnectedPapers\\frontend\\src\\components\\PaperList.vue"],"sourcesContent":["<template>\r\n  <div class=\"data-source-panel\">\r\n    <div class=\"panel-header\">\r\n      <h2>数据来源</h2>\r\n    </div>\r\n    \r\n    <div class=\"source-tabs\">\r\n      <div \r\n        v-for=\"(source, index) in dataSources\" \r\n        :key=\"index\"\r\n        :class=\"['source-tab', { active: activeSource === source.type }]\"\r\n        @click=\"setActiveSource(source.type)\"\r\n      >\r\n        {{ source.name }} <span class=\"count\">({{ source.count }})</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"source-content\">\r\n      <template v-if=\"filteredItems.length > 0\">\r\n        <div \r\n          v-for=\"item in filteredItems\" \r\n          :key=\"item.id\" \r\n          class=\"source-item\" \r\n          :class=\"{ 'selected': selectedItem && selectedItem.id === item.id }\"\r\n          @click=\"selectItem(item)\"\r\n        >\r\n          <div class=\"item-title\">{{ item.title }}</div>\r\n          <div class=\"item-meta\">\r\n            <span class=\"item-source-type\">{{ getSourceTypeName(item.sourceType) }}</span>\r\n            <span class=\"item-year\" v-if=\"item.year\">{{ item.year }}</span>\r\n          </div>\r\n          <div class=\"item-authors\" v-if=\"item.authors\">{{ formatAuthors(item.authors) }}</div>\r\n        </div>\r\n      </template>\r\n      \r\n      <div v-else class=\"no-items\">\r\n        没有找到相关{{ getSourceTypeName(activeSource) }}，请尝试其他关键词\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DataSourcePanel',\r\n  props: {\r\n    searchQuery: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    selectedItem: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeSource: 'all', // all, textbook, paper, emr, guideline\r\n      dataSources: [\r\n        { type: 'all', name: '全部', count: 0 },\r\n        { type: 'textbook', name: '教材', count: 0 },\r\n        { type: 'paper', name: '论文', count: 0 },\r\n        { type: 'emr', name: '电子病历', count: 0 },\r\n        { type: 'guideline', name: '临床指南', count: 0 }\r\n      ],\r\n      items: []\r\n    }\r\n  },\r\n  computed: {\r\n    filteredItems() {\r\n      if (this.activeSource === 'all') {\r\n        return this.items;\r\n      }\r\n      return this.items.filter(item => item.sourceType === this.activeSource);\r\n    }\r\n  },\r\n  methods: {\r\n    setActiveSource(sourceType) {\r\n      this.activeSource = sourceType;\r\n    },\r\n    \r\n    selectItem(item) {\r\n      this.$emit('select-item', item);\r\n    },\r\n    \r\n    formatAuthors(authors) {\r\n      if (!authors || authors.length === 0) return '';\r\n      if (authors.length === 1) return authors[0];\r\n      return authors.slice(0, 2).join(', ') + (authors.length > 2 ? ' 等' : '');\r\n    },\r\n    \r\n    getSourceTypeName(type) {\r\n      const source = this.dataSources.find(s => s.type === type);\r\n      return source ? source.name : '';\r\n    },\r\n    \r\n    updateSourceCounts() {\r\n      // 更新各数据源的数量\r\n      this.dataSources.forEach(source => {\r\n        if (source.type === 'all') {\r\n          source.count = this.items.length;\r\n        } else {\r\n          source.count = this.items.filter(item => item.sourceType === source.type).length;\r\n        }\r\n      });\r\n    },\r\n    \r\n    loadItems(query) {\r\n      // 这里应该调用API获取搜索结果\r\n      // 模拟API调用\r\n      this.isLoading = true;\r\n      \r\n      setTimeout(() => {\r\n        // 示例数据\r\n        this.items = this.generateSampleData(query);\r\n        this.updateSourceCounts();\r\n        this.isLoading = false;\r\n        \r\n        // 如果有结果，默认选中第一个\r\n        if (this.items.length > 0) {\r\n          this.$emit('select-item', this.items[0]);\r\n        }\r\n      }, 500);\r\n    },\r\n    \r\n    generateSampleData(query) {\r\n      // 生成示例数据\r\n      const sampleData = [\r\n        {\r\n          id: 1,\r\n          title: '内科学（第9版）',\r\n          sourceType: 'textbook',\r\n          authors: ['葛均波', '徐永健'],\r\n          year: 2018,\r\n          publisher: '人民卫生出版社',\r\n          keywords: ['高血压', '糖尿病', '心血管疾病'],\r\n          sections: [\r\n            {\r\n              title: '第5章 高血压',\r\n              content: `高血压是常见的慢性病，是心脑血管疾病的主要危险因素。随着人口老龄化，高血压的患病率逐年升高。高血压是以体循环动脉压增高为主要特征的临床综合征，可伴有心、脑、肾等器官的功能或器质性损害。`\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Hypertension Management in 2023: A Comprehensive Review',\r\n          sourceType: 'paper',\r\n          authors: ['Smith J', 'Johnson R', 'Williams T'],\r\n          year: 2023,\r\n          journal: 'Journal of Hypertension',\r\n          keywords: ['高血压', '治疗', '管理'],\r\n          abstract: '本文综述了高血压管理的最新进展，包括诊断标准、药物治疗和生活方式干预。'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: '某三甲医院高血压患者电子病历分析',\r\n          sourceType: 'emr',\r\n          year: 2022,\r\n          hospital: '北京协和医院',\r\n          patientCount: 500,\r\n          keywords: ['高血压', '并发症', '治疗效果'],\r\n          summary: '本研究分析了500例高血压患者的电子病历数据，探讨了不同治疗方案的效果比较。'\r\n        },\r\n        {\r\n          id: 4,\r\n          title: '中国高血压防治指南（2023年修订版）',\r\n          sourceType: 'guideline',\r\n          authors: ['中国高血压联盟', '中华医学会心血管病学分会'],\r\n          year: 2023,\r\n          organization: '中国高血压联盟',\r\n          keywords: ['高血压', '诊断', '治疗', '随访'],\r\n          recommendations: [\r\n            '建议所有成人定期测量血压',\r\n            '对于一级高血压患者，建议首先进行生活方式干预'\r\n          ]\r\n        },\r\n        {\r\n          id: 5,\r\n          title: '病理生理学（第3版）',\r\n          sourceType: 'textbook',\r\n          authors: ['王建枝', '殷莲华'],\r\n          year: 2020,\r\n          publisher: '高等教育出版社',\r\n          keywords: ['高血压', '病理机制', '肾素-血管紧张素系统'],\r\n          sections: [\r\n            {\r\n              title: '第7章 高血压的病理生理学',\r\n              content: `高血压的发病机制复杂，包括肾素-血管紧张素-醛固酮系统激活、交感神经系统功能亢进、血管内皮功能障碍等多种因素。`\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n      \r\n      // 根据查询词过滤\r\n      if (query) {\r\n        const lowerQuery = query.toLowerCase();\r\n        return sampleData.filter(item => \r\n          item.title.toLowerCase().includes(lowerQuery) || \r\n          (item.keywords && item.keywords.some(k => k.toLowerCase().includes(lowerQuery)))\r\n        );\r\n      }\r\n      \r\n      return sampleData;\r\n    }\r\n  },\r\n  watch: {\r\n    searchQuery: {\r\n      handler(newQuery) {\r\n        if (newQuery) {\r\n          this.loadItems(newQuery);\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.data-source-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #fafafa;\r\n}\r\n\r\n.panel-header {\r\n  padding: 1rem;\r\n  background-color: #f0f0f0;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.panel-header h2 {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #444;\r\n  margin: 0;\r\n}\r\n\r\n.source-tabs {\r\n  display: flex;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.source-tab {\r\n  padding: 0.8rem 1rem;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  transition: all 0.2s;\r\n  border-bottom: 2px solid transparent;\r\n}\r\n\r\n.source-tab:hover {\r\n  color: #2a7d8b;\r\n  background-color: #f0f7f9;\r\n}\r\n\r\n.source-tab.active {\r\n  color: #2a7d8b;\r\n  border-bottom-color: #2a7d8b;\r\n  background-color: #e6f3f7;\r\n  font-weight: 500;\r\n}\r\n\r\n.count {\r\n  font-size: 0.8rem;\r\n  color: #888;\r\n}\r\n\r\n.source-content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0.5rem 0;\r\n}\r\n\r\n.source-item {\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #eee;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.source-item:hover {\r\n  background-color: #f0f7f9;\r\n}\r\n\r\n.source-item.selected {\r\n  background-color: #e6f3f7;\r\n  border-left: 4px solid #2a7d8b;\r\n}\r\n\r\n.item-title {\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.item-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.8rem;\r\n  margin-bottom: 0.4rem;\r\n}\r\n\r\n.item-source-type {\r\n  color: #2a7d8b;\r\n  font-weight: 500;\r\n  background-color: #e6f3f7;\r\n  padding: 0.2rem 0.4rem;\r\n  border-radius: 3px;\r\n}\r\n\r\n.item-year {\r\n  color: #888;\r\n}\r\n\r\n.item-authors {\r\n  font-size: 0.85rem;\r\n  color: #666;\r\n}\r\n\r\n.no-items {\r\n  padding: 2rem;\r\n  text-align: center;\r\n  color: #888;\r\n  font-style: italic;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}